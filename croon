#!env perl

use Schedule::Cron;
use Getopt::Std;
use File::Basename;
use POSIX::nice;
use Linux::IO_Prio qw(IOPRIO_WHO_PROCESS IOPRIO_PRIO_VALUE IOPRIO_CLASS_BE ioprio_set);

main();

sub main{
    get_opts();
    %CFG = read_cfg();
    
    my $c = new Schedule::Cron(\&dispatcher); 

    return 0;
}

sub dispatcher {
    my ( $id, @args ) = @_;

    # nice the process
    nice($DNICE);
    #nice the io
    ionice($DIO);
}

sub ionice {
	my ( $prio ) = @_;
	ioprio_set(
		IOPRIO_WHO_PROCESS,
		$$,
		# IOPRIO_CLASS_BE - best effort (0 is most favourable and 7 is least favourable)
		IOPRIO_PRIO_VALUE(IOPRIO_CLASS_BE, 7)
	);
}


sub read_config {
    my %ret = ();
	# processname, niceness, ioniceness, profile
    if( -s $CONFIG ) {
        open my $fh, '<', $CONFIG or die "Cannot open $CONFIG: $";
        while ( my $line = <$fh> ) {
            chomp;
            my ( $proc, $nice, $ionice, $prof ) = split /,/, $line;
            my %tmp = (
                'nice' => $nice,
                'ionice' => $ionice,
                'prof' => $prof
            );
            $proc = basename( $proc );
            $ret{$proc} = \%tmp;
        }
        close $fh;
    }

}

sub get_opts {
	my %o = ();
    getopts('C:F:N:',\%o);

    $CRONFILE = $o{F} ? $o{F} : undef;
    $CONFIG = $o{C} ? $o{C} : undef;
    $DNICE = $o{N} ? $o{N} : 10;
    $DIO = $o{D} ? $o{D} : 4;
}
